package com.taxi.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.taxi.model.BookingForm;
import com.taxi.model.ContactForm;
import com.taxi.service.ContactFormService;
import com.taxi.service.ContactFormServiceImpl;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.validation.Valid;

@Controller
public class MyController {

	@Autowired
	private ContactFormService contactFormService;
	
	
	public void setContactFormService(ContactFormService contactFormService) {
		this.contactFormService = contactFormService;
	}
	
	@GetMapping(path = {"/","home","index","welcome"})
	public String welcomeView(HttpServletRequest req, Model m) {
		String requestURI = req.getRequestURI();
		m.addAttribute("mycurrentpage",requestURI);
		m.addAttribute("bookingForm",new BookingForm());
		return "index";
	}
	@GetMapping("/about")
	public String aboutView(HttpServletRequest req, Model m) {
		String requestURI = req.getRequestURI();
		m.addAttribute("mycurrentpage",requestURI);
		return "about";
	}
	@GetMapping("/cars")
	public String carsView(HttpServletRequest req, Model m) {
		String requestURI = req.getRequestURI();
		m.addAttribute("mycurrentpage",requestURI);
		return "cars";
	}
	@GetMapping("/services")
	public String servicesView(HttpServletRequest req, Model m) {
		String requestURI = req.getRequestURI();
		m.addAttribute("mycurrentpage",requestURI);
		return "services";
	}
	@GetMapping("/contacts")
	public String contactsView(HttpServletRequest req, Model m) {
		String requestURI = req.getRequestURI();
		m.addAttribute("mycurrentpage",requestURI);
		m.addAttribute("contactForm", new ContactForm());
		return "contacts";
	}
	@PostMapping("/contactform")
	public String contactForm(@Valid @ModelAttribute ContactForm contactForm , BindingResult bindingResult ,Model m, RedirectAttributes redirectAttributes) {
		System.out.println(contactForm);
		if(bindingResult.hasErrors()) {
			m.addAttribute("bindingResult", bindingResult);
			return "contacts";
		}
		ContactForm savContactFormService = contactFormService.saveContactFormService(contactForm);
		if(savContactFormService!=null) {
			redirectAttributes.addFlashAttribute("message", "Message sent successfully");
		}
		else {
			redirectAttributes.addFlashAttribute("message", "Something went wrong");
		}
		return "redirect:/contacts";
	}
	@PostMapping("/bookingform")
	public String bookingForm(@Valid @ModelAttribute BookingForm bookingForm , BindingResult bindingResult ,Model m, RedirectAttributes redirectAttributes) {

		if(bindingResult.hasErrors()) {
			m.addAttribute("bindingResult", bindingResult);
			return "index";
		}
		
		return "redirect:/index";
	}
}
